{
  "title": "Promise It Won't Hurt",
  "subtitle": "Aprende a usar promesas en Node y en los navegadores",
  "exercise": {
    "warm_up": "Introducción",
    "fulfill_a_promise": "Cumplir una promesa",
    "reject_a_promise": "Rechazar una promesa",
    "to_reject_or_not_to_reject": "Rechazar, o no rechazar",
    "always_async": "Siempre asíncrono",
    "shortcuts": "Atajos",
    "values_and_promises": "Valores y promesas",
    "throw_an_error": "Lanzar un error",
    "an_important_rule": "Una regla importante",
    "multiple_promises": "Múltiples promesas",
    "fetch_json": "Obtener JSON",
    "do_some_work": "Hacer un trabajo"
  },
  "common": {
    "exercise": {
      "pass": {
        "constr": "Constructor de promesas utilizado",
        "func": "Método {{{func}}} utilizado",
        "funcObj": "Método {{{func}}} utilizado con un objeto de {{{type}}}",
        "funcAfter": "Método {{{after}}} utilizado después de {{{before}}}"
      },
      "fail": {
        "constr": "Constructor de promesas no utilizado",
        "func": "Método {{{func}}} no utilizado",
        "funcObj": "Método {{{func}}} no utilizado con un objeto de {{{type}}}",
        "funcAfter": "Método {{{after}}} utilizado antes de {{{before}}}"
      }
    }
  },
  "exercises": {
    "reject_a_promise": {
      "fail": {
        "successHandler": "¡Casi lo logras! Agregaste un manejador en caso de éxito en vez de en caso de falla a la promesa, en la llamada a `.then`. Revisa las instrucciones, especialmente la sección de Pistas.",
        "noHandlers": "Llamaste a `.then` sin callbacks (llamadas de vuelta). Revisa la última sección de como usar `.then` si lo necesitas."
      }
    },
    "to_reject_or_not_to_reject": {
      "pass": {
        "thenBoth": "Usaste el método `then` especificando ambas llamadas de vuelta."
      },
      "fail": {
        "thenBoth": "No usaste el método `then` especificando ambas llamadas de vuelta."
      }
    },
    "shortcuts": {
      "fail": {
        "funcOr": "No se utilizan ni {{{func1}}} ni {{{func2}}}"
      }
    }
  }
}
